openapi: 3.0.3
info:
  title: Private Services API  - OpenAPI 3.0
  description: "This is the set of api endpoints to support access to Subscripify\
    \ Super Services. Super Services are those that are available to Subscripify's\
    \ super tenants. They provide higher capabilities to super tenants to manage across\
    \ multiple main tenants within the context of the Super-Tenant.<br><br> \nThese\
    \ APIs act as the front end to Private Services engineered and hosted by super\
    \ tenants that need to access the subscripify platform.<br><br>\nExamples of super\
    \ services available only to Super Tenants through this API are: <br>\nTenant\
    \ Management<br>\nSubscription and Plan Management <br>\nBilling and Payments<br><br>\n\
    Subscripify also maintains a set of api endpoints to support access to Subscripify\
    \ Public Services. Subscripify public services are services required by all tenants\
    \ and users on the subscripify platform. All tenants, regardless of type have\
    \ access to these services.<br><br>\nExamples of private services available to\
    \ Super Tenants and to Main Tenants are: <br>\nIdentity Services<br>\nUsage Analytics\
    \ Services<br>\n\nFor more information about Subscripify's tenant architecture\
    \ click here."
  termsOfService: http://www.subscripify.com/terms/apiusage
  contact:
    email: william.ohara@subscripify.com
  license:
    name: Private
    url: http://www.subscripify.com/license
  version: 0.0.1
externalDocs:
  description: Find out more about Subscripify
  url: http://www.subscripify.com
servers:
- url: https://lord-tenant.subscripify.com
tags:
- name: tenants
  description: everything needed to create and manage tenants on the Subscripify platform
  externalDocs:
    description: Link to Tenant Architecture Doc
    url: http://wiki.subscripify.com/tenant-architecture
- name: subscription
  description: everything subscriptions
  externalDocs:
    description: Find out more about our store
    url: http://wiki.subscripify.com/tenant-architecture
paths:
  /tenants/lord:
    post:
      tags:
      - tenants
      summary: Add a new lord tenant
      description: Adds a new lord tenant to the subscripify tenant system. This will
        start a new Kubernetes cluster on the selected cloud service
      operationId: addLordTenant
      requestBody:
        description: All data required to start a new lord tenant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lordTenantCreateBody'
        required: true
      responses:
        "200":
          description: Successful operation returns the new object UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantUUIDCreatedObject'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
      security:
      - tenant_auth:
        - write:lord-tenants
  /tenants/super:
    post:
      tags:
      - tenants
      summary: Add a new super tenant
      description: Adds a new super tenant to the selected liege tenant in liegeUUID
        header parameter.
      operationId: addSuperTenant
      parameters:
      - name: liegeUUID
        in: header
        description: "Liege is the tenant that manages the target tenant. In the case\
          \ of adding a tenant, this header is required  and establishes the feudal\
          \ relationship between the creator tenant and the created tenant. <br><br>\
          \ In the case of tenant updates or    deletes this field holds the liege\
          \ of the target tenant. If the two ids do not have the appropriate relationship\
          \ the action will fail.  <br><br>This field is also checked against the\
          \ identity of the caller. The identity must be a member of the Liege tenant\
          \ and must have the  appropriate permissions."
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
      requestBody:
        description: All data required to start a new super tenant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/superTenantCreateBody'
        required: true
      responses:
        "200":
          description: Successful operation returns the new object UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantUUIDCreatedObject'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
      security:
      - tenant_auth:
        - write:lord-tenants
        - write:super-tenants
  /tenants/main:
    post:
      tags:
      - tenants
      summary: Add a new main tenant
      description: Adds a new main tenant to the selected liege tenant in liegeUUID
        header parameter.
      operationId: addMainTenant
      parameters:
      - name: liegeUUID
        in: header
        description: "Liege is the tenant that manages the target tenant. In the case\
          \ of adding a tenant, this header is required  and establishes the feudal\
          \ relationship between the creator tenant and the created tenant. <br><br>\
          \ In the case of tenant updates or    deletes this field holds the liege\
          \ of the target tenant. If the two ids do not have the appropriate relationship\
          \ the action will fail.  <br><br>This field is also checked against the\
          \ identity of the caller. The identity must be a member of the Liege tenant\
          \ and must have the  appropriate permissions."
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
      requestBody:
        description: All data required to start a new main tenant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mainTenantCreateBody'
        required: true
      responses:
        "200":
          description: Successful operation returns the new object UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantUUIDCreatedObject'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
      security:
      - tenant_auth:
        - write:lord-tenants
        - write:super-tenants
        - write:main-tenants
  /tenants/{targetTenantGuid}:
    get:
      tags:
      - tenants
      summary: returns a tenant
      description: returns a tenant
      operationId: getTenant
      parameters:
      - name: targetTenantUUID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: This is the UUID of the target tenant.    The target tenant
            must belong to the liege tenant in the liegeUUID header.
      responses:
        "200":
          description: return tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
    delete:
      tags:
      - tenants
      summary: removes a tenant
      description: removes a tenant
      operationId: deleteTenant
      parameters:
      - name: tenantGuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the lord tenant. Must be
            a valid services config UUID
      responses:
        "200":
          description: return tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
    patch:
      tags:
      - tenants
      summary: updates a tenant
      description: updates a tenant
      operationId: updateTenant
      parameters:
      - name: tenantGuid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the lord tenant. Must be
            a valid services config UUID
      responses:
        "200":
          description: return tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
  /tenants/search:
    get:
      tags:
      - tenants
      summary: Tenant Search
      description: Search for tenants based upon the input parameters available
      operationId: searchTenant
      parameters:
      - name: liegeUUID
        in: header
        description: "Liege is the tenant that manages the target tenant. In the case\
          \ of adding a tenant, this header is required  and establishes the feudal\
          \ relationship between the creator tenant and the created tenant. <br><br>\
          \ In the case of tenant updates or    deletes this field holds the liege\
          \ of the target tenant. If the two ids do not have the appropriate relationship\
          \ the action will fail.  <br><br>This field is also checked against the\
          \ identity of the caller. The identity must be a member of the Liege tenant\
          \ and must have the  appropriate permissions."
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
      responses:
        "200":
          description: Successful operation returns full tenant data including generated
            felids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantSearchResults'
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "409":
          description: Resource Already Exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "406":
          description: Improper Protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "415":
          description: Improper media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        "429":
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponseError'
components:
  schemas:
    lordTenantCreateBody:
      required:
      - internalServicesConfig
      - publicServicesConfig
      - subdomain
      - subscripifyDeploymentCloudLocation
      - superServicesConfig
      type: object
      properties:
        internalServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the lord tenant. Must be
            a valid services config UUID
        superServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the super-tenant. Must
            be a valid services config UUID
        subdomain:
          maxLength: 30
          pattern: ".[a-z][0-9][-]"
          type: string
          description: The subdomain name string which used for the services namespace
            of the tenant and  providing unique url for each tenant
          example: subscripify
        publicServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the main-tenant's public
            services. The services config UUID  used must be a publicServices UUID
            and belong to the liege tenant
        subscripifyDeploymentCloudLocation:
          maxLength: 32
          pattern: azure
          type: string
          description: The cloud provider to deploy to. e.g. The only cloud provider
            supported (currently) is azure.
      additionalProperties: false
    superTenantCreateBody:
      required:
      - publicServicesConfig
      - subdomain
      - subscripifyDeploymentCloudLocation
      - superServicesConfig
      type: object
      properties:
        superServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the super-tenant. Must
            be a valid services config UUID
        tenantType:
          maxLength: 5
          pattern: ^super|lord|main$
          type: string
          description: "Indicate which type of tenant one is spinning up. Main Tenants\
            \ require only a public services config.  Super tenants require a super\
            \ services config and a public config. Lord Tenants require super, public\
            \ and internal services  configs."
        subdomain:
          maxLength: 30
          pattern: ".[a-z][0-9][-]"
          type: string
          description: The subdomain name string which used for the services namespace
            of the tenant and  providing unique url for each tenant
          example: subscripify
        publicServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the main-tenant's public
            services. The services config UUID  used must be a publicServices UUID
            and belong to the liege tenant
        subscripifyDeploymentCloudLocation:
          maxLength: 32
          pattern: azure
          type: string
          description: The cloud provider to deploy to. e.g. The only cloud provider
            supported (currently) is azure.
      additionalProperties: false
    mainTenantCreateBody:
      required:
      - publicServicesConfig
      - subdomain
      - subscripifyDeploymentCloudLocation
      type: object
      properties:
        subdomain:
          maxLength: 30
          pattern: ".[a-z][0-9][-]"
          type: string
          description: The subdomain name string which used for the services namespace
            of the tenant and  providing unique url for each tenant
          example: subscripify
        publicServicesConfig:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The services config UUID to use for the main-tenant's public
            services. The services config UUID  used must be a publicServices UUID
            and belong to the liege tenant
        subscripifyDeploymentCloudLocation:
          maxLength: 32
          pattern: azure
          type: string
          description: The cloud provider to deploy to. e.g. The only cloud provider
            supported (currently) is azure.
      additionalProperties: false
    tenantUUIDCreatedObject:
      type: object
      properties:
        tenantUUID:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
      example:
        tenantUUID: tenantUUID
    tenantSearchResults:
      type: array
      items:
        $ref: '#/components/schemas/tenantSearchResults_inner'
      x-schema-name: tenantSearchResults
    extendedTenantObject:
      type: object
      properties:
        tenantUUID:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          readOnly: true
        orgName:
          maxLength: 32
          type: string
          description: The name of the organization at time of tenant creation and
            the alias used for searching by org name.
        kubeNamespace:
          maxLength: 32
          type: string
          description: The name prefix for the Kubernetes namespaces and cloud resources
            that make up this tenant.
          readOnly: true
        liegeUUID:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          description: The UUID of this tenant's owner tenant
          readOnly: true
        createTimestamp:
          type: string
          readOnly: true
    mainTenantObject:
      allOf:
      - $ref: '#/components/schemas/mainTenantCreateBody'
      - $ref: '#/components/schemas/extendedTenantObject'
    superTenantObject:
      allOf:
      - $ref: '#/components/schemas/superTenantCreateBody'
      - $ref: '#/components/schemas/extendedTenantObject'
    lordTenantObject:
      allOf:
      - $ref: '#/components/schemas/lordTenantCreateBody'
      - $ref: '#/components/schemas/extendedTenantObject'
    httpResponseError:
      type: object
      properties:
        responseCode:
          type: integer
          example: 401
        message:
          maxLength: 200
          pattern: ".[a-z][0-9]"
          type: string
          example: not authorized to view this resource
      additionalProperties: false
      description: Authentication information is missing or invalid
      example:
        message: not authorized to view this resource
        responseCode: 401
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/lordTenantObject'
      - $ref: '#/components/schemas/superTenantObject'
      - $ref: '#/components/schemas/mainTenantObject'
    tenantSearchResults_inner:
      type: object
      properties:
        tenantUUID:
          maxLength: 32
          pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
            -[0-9a-fA-F]{12}$"
          type: string
          readOnly: true
        orgName:
          maxLength: 32
          type: string
          description: The name of the organization at time of tenant creation and
            the alias used for searching by org name.
        tenantType:
          maxLength: 5
          pattern: ^super|lord|main$
          type: string
          description: Indicate which type of tenant. Lord tenants will see both "super"
            and "main" tenant types. Super tenants will only see "main" tenant types.
      example:
        tenantType: tenantType
        tenantUUID: tenantUUID
        orgName: orgName
  responses:
    "401":
      description: Authorization Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "403":
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "404":
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "405":
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "406":
      description: Improper Protocol
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "409":
      description: Resource Already Exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "415":
      description: Improper media type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    "429":
      description: too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/httpResponseError'
  parameters:
    liegeUUID:
      name: liegeUUID
      in: header
      description: "Liege is the tenant that manages the target tenant. In the case\
        \ of adding a tenant, this header is required  and establishes the feudal\
        \ relationship between the creator tenant and the created tenant. <br><br>\
        \ In the case of tenant updates or    deletes this field holds the liege of\
        \ the target tenant. If the two ids do not have the appropriate relationship\
        \ the action will fail.  <br><br>This field is also checked against the identity\
        \ of the caller. The identity must be a member of the Liege tenant and must\
        \ have the  appropriate permissions."
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
          -[0-9a-fA-F]{12}$"
        type: string
    targetTenantUUID:
      name: targetTenantUUID
      in: path
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 32
        pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b\
          -[0-9a-fA-F]{12}$"
        type: string
        description: This is the UUID of the target tenant.    The target tenant must
          belong to the liege tenant in the liegeUUID header.
    searchSubdomain:
      name: subdmn
      in: query
      required: false
      style: form
      explode: true
      schema:
        maxLength: 61
        pattern: "^([a-zA-Z0-9]|(?:[a-zA-Z0-9]+[a-zA-Z0-9.-]*[a-zA-Z0-9]+))$"
        type: string
        description: A partial or whole subdomain name. Use of this field for search
          adheres to naming rules outlined in    <a href='https://www.rfc-editor.org/rfc/rfc3986#section-3.2.2'>RFC3986</a>
          for subdomains.
    searchOrgName:
      name: orgName
      in: query
      required: false
      style: form
      explode: true
      schema:
        maxLength: 20
        type: string
        description: A partial or whole organization name/ alias given when the tenant
          was created.
